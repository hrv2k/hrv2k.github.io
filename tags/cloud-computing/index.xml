<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloud computing on Hervé Kakiang&#39;s blog</title>
    <link>https://hrv2k.github.io/tags/cloud-computing/</link>
    <description>Recent content in Cloud computing on Hervé Kakiang&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 20019–2021, Hervé Kakiang; all rights reserved.</copyright>
    <lastBuildDate>Wed, 23 Oct 2019 09:30:37 +0000</lastBuildDate><atom:link href="https://hrv2k.github.io/tags/cloud-computing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Let&#39;s Talk Cloud</title>
      <link>https://hrv2k.github.io/post/let-s-talk-cloud/</link>
      <pubDate>Wed, 23 Oct 2019 09:30:37 +0000</pubDate>
      
      <guid>https://hrv2k.github.io/post/let-s-talk-cloud/</guid>
      <description>
        
          &lt;h1 id=&#34;1-what-is-cloud-technology&#34;&gt;1. What is Cloud technology?&lt;/h1&gt;
&lt;p&gt;Cloud technology abstracts away all infrastructure management. What does that mean? It means as a business, you don&#39;t have to deal with bare metal (think computer hardware) and anything related to it anymore.&lt;/p&gt;
&lt;p&gt;Before the advent of the cloud, you had to go to or call a hardware vendor to figure out what hardware brand to adopt, what model of hardware to buy, what is the best deal for you in terms of price, memory, cpu etc., lower-level stuff in a nutshell. You also had to think about your maximum expected load and plan for it before making any purchase. That meant buying beefy machine and not using all of its resources for most of the time. And also if your machines ran substantial workload, you had to think about cooling or your processors wouldn&#39;t work properly. Furthermore, you had to think about hardware maintenance and facility security. You may have the best software security and all of that, but if your machines are not physically well secured, you are still at risk. How much time, money, and effort do you put into making sure your infrastucture meets the demand? What is the state of your network? Does it work as expected? How do you manage your data, backups, etc. Probably you are doing all these things but they have nothing to do with your core business and to some degree it&#39;s a pain in the neck. With the advent of the cloud, you have many more optimized options and solutions.&lt;/p&gt;
&lt;p&gt;So, what cloud technology does is it takes care of all the compute, network and storage management and offers them as services. Computing has become a public utility where it&#39;s easy to get the type of service you want on demand. And you only pay for what you use. This idea of &amp;quot;&lt;a href=&#34;https://en.wikipedia.org/wiki/Utility_computing&#34;&gt;computing utility&lt;/a&gt;&amp;quot;, or what we know as &lt;a href=&#34;https://en.wikipedia.org/wiki/Cloud_computing&#34;&gt;cloud computing&lt;/a&gt;, was suggested by &lt;a href=&#34;https://en.wikipedia.org/wiki/John_McCarthy_(computer_scientist)&#34;&gt;John McCarthy&lt;/a&gt; when he was speaking at the MIT Centennial in 1961,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;If computers of the kind I have advocated become the computers of the future, then computing may someday be organized as a public utility just as the telephone system is a public utility. Each subscriber needs to pay only for the capacity he actually uses. The computer utility could become the basis of a new and important industry&amp;quot;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By providing computing as a service, cloud technology enables businesses to focus on their core business and use their resources to optimize for what&#39;s trully important to them. It could be customer satisfaction, employee productivity, growth, profit, etc. It&#39;s clear that cloud technology has the potential to greatly impact business operations, at least IT operations of a business. To take advantage of the features that the modern cloud technology has to offer, IT organizations or IT departments will have to think differently about how to build applications if they are to embrace the new way of doing computing. For example, cloud providers have made it possible and very simple to scale applications to handle heavy workloads. But not all applications are scalable, and not all parts of an application need scale at the same time and to the same level. That means to take advantage of the cloud technology, software developers have to consider some architectural changes. In this specific case, they have to build applications in a way that takes not only scalability into account, but also independent scalability of different services of the application.&lt;/p&gt;
&lt;p&gt;With the increasing adoption of cloud services, businesses are outsourcing the jobs of sys admin and/or DevOps engineer to cloud providers. One may think that systems administration and operation related jobs will be found solely in datacenters, because businesses will be using cloud services and won&#39;t have to deal with infrastructure management. All they will need is software engineers to build software and write deployment codes. So essentially DevOps engineers are working tirelessly to build cloud infrastructures so that there won&#39;t be DevOps jobs in entreprises in the future. That means DevOps jobs won&#39;t go away, they will just be shipped maybe entirely to data centers. According to the &lt;a href=&#34;https://insights.stackoverflow.com/survey/2019#key-results&#34;&gt;Stackoverflow Developer Survey 2019&lt;/a&gt;, DevOps specialists are among the highest paid, most satisfied with their jobs. So, draw your own conclusions.&lt;/p&gt;
&lt;p&gt;It is undeniable that cloud providers have made provisioning and managing compute resources very simple, as well as deploying apps. In the next sections, I focus on the GCP.&lt;/p&gt;
&lt;h1 id=&#34;2-gcp-in-a-nutshell&#34;&gt;2. GCP in a nutshell&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud Platform (GCP)&lt;/a&gt; is Google&#39;s Cloud offerings. It&#39;s a suite of products and services ranging from basic compute, storage and networking to specialized specialized services such as IoT, analytics, AI, etc. Depending on your needs, you may choose to manage the resources you provision yourself or choose to use fully managed services. Managed services are taken care of by the platform on your behalf and they are redundant, thus highly available. That means management overhead, scalability and availability issues are all managed by the GCP.
&lt;a href=&#34;https://cloud.google.com/security/infrastructure/design/&#34;&gt;The whole of GCP is built on top of Google&#39;s global infrastructure&lt;/a&gt;. It takes advantage of years of research, engineering and testing that have gone into building that infrastructure.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/gregsramblings/google-cloud-4-words/blob/master/Poster-medres.png?raw=true&#34; alt=&#34;GCP_producs&#34;&gt;&lt;/p&gt;
&lt;p&gt;Let&#39;s geek out a bit over some GCP services.&lt;/p&gt;
&lt;h1 id=&#34;3-some-gcp-products-and-services&#34;&gt;3. Some GCP products and services&lt;/h1&gt;
&lt;h2 id=&#34;deployment-manager&#34;&gt;Deployment Manager&lt;/h2&gt;
&lt;p&gt;I find the concept of deployment manager very interesting. You declare in a config file the resources you want to create and you submit the file to &lt;a href=&#34;https://cloud.google.com/deployment-manager/&#34;&gt;Google Cloud deployment manager&lt;/a&gt; and that&#39;s it; your resources or services are created and deployed. You can bring your entire infrastructure to life using a couple lines of declarative code. Hence the concept of &lt;a href=&#34;https://en.wikipedia.org/wiki/Infrastructure_as_code&#34;&gt;Infrastructure as Code&lt;/a&gt;, which is a way to define in code the resources you need for your infrastructure and to use an infrastructure provisioning engine to create and configure those resources.&lt;/p&gt;
&lt;p&gt;Using deployment manager, when your deployment infrastructure gets more complex, you can create a template for each resource. For example, you can create a template for a network, a template for the firewall rules, a template for a virtual machine (VM), etc. A template can import other templates. Then all the templates are imported in a single configuration file that the deployment manager will use to create the resources specified in various templates.&lt;/p&gt;
&lt;p&gt;One of the important concepts of deployment manager, and that&#39;s true for all the Infrastructure as Code services out there, is that you don&#39;t give instructions about how your infrastructure should be built; the deployment manager figures that out by itself. You just tell it how you want your infrastructure to look like, and it makes sure the state of your infrastructure matches your intent.&lt;/p&gt;
&lt;p&gt;With the Infrastructure as Code approach, you can afford to experiment with different solutions and collect usage information to make better decisions. You can easily tweak your deployment infrastructure to best suit your requirements. As a consequence, when your infrastructure evolves, you just need to update your deployment codes to meet the demand and tell the deployment manager to make your infrastructure looks like what you have described in the code.&lt;/p&gt;
&lt;h2 id=&#34;networking&#34;&gt;Networking&lt;/h2&gt;
&lt;p&gt;Deploying a network on the GCP is actually simpler than you may think. The GCP has greatly simplified the creation of a &lt;a href=&#34;https://cloud.google.com/vpc/docs/vpc&#34;&gt;Virtual Private Cloud (VPC) network&lt;/a&gt;, which is a global private network that operates on top of Google&#39;s global network infrastructure. It&#39;s the same network that Google uses to deliver its services (think Google Search, Gmail, Google Drive, etc...) to billions of users worldwide. VPC networks on the GCP are global resources. That means, you can have your virtual machines provision in Europe and Asia and all being in the same private network.&lt;/p&gt;
&lt;p&gt;When you create a project on the GCP, a default VPC network is automatically created. The default VPC contains subnets in each region. If the topology of the default VPC network doesn&#39;t meet your requirements, you can modify or delete it completely and recreate a custom network where you manually create the subnets in the regions you want your infrastructure to be deployed in. With just a couple of clicks, or a single command you have a globally operational VPC network.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud compute networks create my-network --subnet-mode&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;custom&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using the &lt;a href=&#34;https://console.cloud.google.com/&#34;&gt;GCP console&lt;/a&gt;, you can create the VPC network and its subnets at the same time. However using the command-line, it&#39;s done separately. For that, you specify in what geographic region (American regions, European regions, Asian regions) you want the subnet to be created and you specify the IP address range of the subnet as shown below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud compute networks subnets create my-network-subnet-eu &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; --network&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;my-network --region&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;europe-west1 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; --range&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;10.128.0.0/20&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can create firewall rules to allow or block network traffic based on various protocols and ports to or from certain IP address ranges. It is possible to also create firewall rules that apply to a specific machine instance by using network tags. You can enable the logging of network traffic by just toggling a button.&lt;/p&gt;
&lt;h2 id=&#34;custom-machine-type&#34;&gt;Custom machine type&lt;/h2&gt;
&lt;p&gt;The same simplicity is present when you are creating virtual machine (VM) instances. You choose the machine type that best suits your workload, which is either memory intensive or CPU intensive or standard. The thing with machine type is that they are predefined. That is, the number of vCPUs and amount of memory of a given machine type are fixed. For example let&#39;s say your workload is CPU intensive and you need 20 vCPUs to accommodate it. Now guess what? There is no predefined machine type with 20 vCPUs, you&#39;ll have to go with a predefined machine type that has 32 vCPUs. So you&#39;ll be wasting money paying for 12 additional vCPUs that are not going to be used. That looks bad. Well, I should say it looked bad; because on GCP the problem is solved with &lt;a href=&#34;https://cloud.google.com/custom-machine-types/&#34;&gt;custom machine types&lt;/a&gt;. Now if none of the predefined machine types properly suits your workload, you can configure your own machine type. While creating the VM you just specify the number of vCPUs and the memory size that you want your VM to have. In the GCP console, you just input these numbers. The command to create a VM that has 10 vCPUs and 30 GB of memory is the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud compute instances create my-custom-vm --custom-cpu &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; --custom-memory &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; --zone europe-west1-b&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Other major cloud providers have tried to solve this problem by providing hundreds of machine types.&lt;/p&gt;
&lt;p&gt;You can resize your VM whenever you want. You just need to stop the instance, specify the new memory size and number of vCPUs, then you restart the instance.
There are many other properties that you can specify when creating a VM. Properties such as, boot disk type, boot disk size, boot disk image, startup script, tags that can be used for firewall rules, etc. They define the VM configuration.&lt;/p&gt;
&lt;h2 id=&#34;managed-instance-group&#34;&gt;Managed Instance Group&lt;/h2&gt;
&lt;p&gt;Now, let&#39;s say in general your single VM is able to handle all your workloads. But sometimes, traffic spikes and additional VMs are needed to share the workloads. What should you do? Should you create more VMs and wait for the spike, thereby wasting money on idle instances? No. Should you wait until your single running VM reaches its capacity limit and gets knock out by the traffic before spinning up another VM, thereby causing unnecessary disruption to your business? No. You should rather use &lt;a href=&#34;https://cloud.google.com/compute/docs/instance-groups/&#34;&gt;Managed instance groups (MIGs)&lt;/a&gt; and enable autoscaling and load balancing services.&lt;/p&gt;
&lt;p&gt;Essentially, MIGs are groups of identical VM instances created from the same instance template and managed by GCP. MIGs can automatically scale up or down the number of instances in a group depending on the workload size and distribute incoming network traffic across the instances. Managed instance groups also offer autohealing. Based on health checks, new instances can be provisioned to replace unresponsive instances. If an instance goes down for some reason, another one is automatically created to replace it.&lt;/p&gt;
&lt;p&gt;To create a managed instance group, you need an instance template. An instance template is a specification of a VM configuration. Since the VMs of an instance group have to be identifical, they are created with the same properties that are specified in the instance template. Here comes the best part. When you create a managed instance group, GCP manages everything for you once you&#39;ve specified how you want the instance group to behave. You do that by configuring an autoscaling policy and a target utilization level.
An autoscaling policy is basically a load metric. it can be the average or maximum CPU utilization, some monitoring metrics that you define or the maximum requests per second per instance. The target utilization level is the target load at which you want to maintain the VM instances of your managed instance group. For example, let&#39;s say your autoscaling policy is based on the average CPU utilization and you set the target utilization level at 80%. That means instances will be added to or deleted from the managed instance group to maintain the average CPU utilization around 80%. The maximum and minimum number of instances in a MIG has to be specified at its creation.&lt;/p&gt;
&lt;h2 id=&#34;load-balancers&#34;&gt;Load balancers&lt;/h2&gt;
&lt;p&gt;Since managed instance groups consist of many VM instances with different IP addresses which are generally ephemeral, there is therefore a need for a unique and stable IP address that user requests can reach. We also need to distribute traffic to the instances of the MIG. That&#39;s where load balancers come in. They provide not only a stable access point via a static public IP address that serves as a frontend for all VM instances in the instance group, but also a system to distribute network traffic among the instances.&lt;/p&gt;
&lt;p&gt;GCP has many &lt;a href=&#34;https://cloud.google.com/load-balancing/docs/load-balancing-overview#types_of_cloud_load_balancing&#34;&gt;types of load balancing&lt;/a&gt;. &lt;a href=&#34;https://cloud.google.com/load-balancing/docs/choosing-load-balancer&#34;&gt;Choosing the right load balancer&lt;/a&gt; is not as straightforward as creating a VM. You need to understand how they work and given your desired deployment architecture, which one will best meet your requirements. &lt;a href=&#34;https://cloud.google.com/load-balancing/docs/&#34;&gt;The Google Cloud documentation&lt;/a&gt; is very extensive and goes into details about every load balancer, the different components of a load balancer and what you need to know to be able to make the make the right choice.&lt;/p&gt;
&lt;p&gt;There are 3 main axes along which GCP&#39;s load balancers can be divided. These are, source of the traffic (internal or external), destination of traffic (regional or global) and traffic type (TCP, UDP, HTTP/HTTPS, SSL).&lt;/p&gt;
&lt;p&gt;Based on the source of traffic that is forwarded, GCP&#39;s load balancers can be divided into internal and external load balancers.
Internal load balancers distribute traffic originating from within a VPC network. Whereas external load balancers distribute traffic coming from the public internet to a VPC network.&lt;/p&gt;
&lt;p&gt;Internal load balancers are regional. That is to say they distribute traffic to backends located in one region (can be spread across multiple zones). External load balancers, on the other hand, are regional or global. Global load balancers distribute traffic among backends spread across multiple regions.&lt;/p&gt;
&lt;p&gt;GCP&#39;s load balancers can further be divided based on the supported traffic types. In other words, they operate at different layers of the OSI model.&lt;/p&gt;
&lt;p&gt;Coming back to choosing the right load balancer, there is a &lt;a href=&#34;https://cloud.google.com/load-balancing/docs/choosing-load-balancer#flow_chart&#34;&gt;Flow chart&lt;/a&gt; for that.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.google.com/load-balancing/images/choose-lb.svg&#34; alt=&#34;Flowchart_choosing_LB&#34;&gt;&lt;/p&gt;
&lt;p&gt;You need to have 3 pieces of information to effectively use the flowchart:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The source of the traffic that is going to be forwarded to the load balancer: Is it coming from the internet, &lt;strong&gt;external load balancer&lt;/strong&gt;. Or it&#39;s coming from within your VPC network, &lt;strong&gt;internal load balancer&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The location of the backends that are going to receive the traffic distributed by the load balancer: Are they in the same region, &lt;strong&gt;regional load balancer&lt;/strong&gt;. Or they are spread across multiple regions, &lt;strong&gt;global load balancer&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The type of traffic your load balancer must handle. Depending on 1 and 2, you may choose a &lt;strong&gt;tcp/udp load balancer&lt;/strong&gt;, &lt;strong&gt;ssl or tcp proxy&lt;/strong&gt; or an &lt;strong&gt;http/https load balancer&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you want to distribute traffic coming from within your VPC network, you use internal load balancers. And since internal load balancers are regional, your backends have to be in one region.&lt;/p&gt;
&lt;p&gt;If you have to distribute HTTP(S) traffic coming from the internet, you use global HTTP(S) load balancing.&lt;/p&gt;
&lt;p&gt;If it&#39;s UDP traffic, the only option is to go with Network TCP/UDP load balancing, which is regional.&lt;/p&gt;
&lt;p&gt;But if it&#39;s TCP traffic, that&#39;s where it gets interesting. TCP traffic may be encrypted using SSL/TLS. If it&#39;s the case, you may offload the encryption/decryption work to the platform by using the SSL proxy load balancing. If you don&#39;t want to do that and still forward traffic to backends located in mutiple regions, you may use TCP proxy load balancing. But if you want to preserve client IPs, you should go with Network TCP/UDP load balancing, because all GCP&#39;s load balancers proxy connections from clients except Network TCP/UDP and Internal TCP/UDP load balancing.&lt;/p&gt;
&lt;p&gt;When using cloud products the devil is in the details, however there is nothing devilish here. For example, with respect to networking on the GCP, you have to choose between two &lt;a href=&#34;https://cloud.google.com/network-tiers/docs/overview&#34;&gt;Network Service Tiers&lt;/a&gt;, Standard Tier and Premier Tier. Essentially with Premier Tier, the traffic is routed within Google&#39;s global private network as much as possible; it&#39;s fast, more secured and you pay a little bit more. With Standard Tier, the traffic exits as soon as possible and is routed over the public internet to the client; it&#39;s cheaper and ... you know ... it&#39;s the internet. So what do you need? Global availability, low latency and high-performance, then stay premium. Or you have a tight budget and prefer optimizing for cost, then go standard. You can combine the two if you have workloads with different requirements.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.google.com/network-tiers/images/tiers-use-cases-icons.svg&#34; alt=&#34;NST&#34;&gt;&lt;/p&gt;
&lt;p&gt;The choice of a Network Service Tier affects your GCP resources including load balancers. Internal load balancers support only the Premium Tier of Network Service. But with external load balancers, you have the choice. However if you want to use global load balancing you have to opt for the Premium Tier. In any other cases, opting for Standard Tier restricts your load balancing to be regional. That&#39;s the case of HTTP(S) load balancing and TCP/SSL Proxy. In fact if you think about it, it all makes sense. With internal load balancers, the traffic is already coming from the VPC network. With global load balancers, the backends are spread across multiple regions. A great amount of traffic will be going on within Google&#39;s network, because a global load balancer sends user requests to the closest available backend. If that backend is at capacity, the traffic is sent to the next closest backend (or region). So a global load balancer uses the Premier Tier by design.&lt;/p&gt;
&lt;p&gt;I&#39;ll wrap up with one final remark. Google doesn&#39;t use hardware load balancing but a &lt;a href=&#34;https://research.google.com/pubs/pub44824.html&#34;&gt;software-defined network load balancer called Maglev&lt;/a&gt;. GCP&#39;s load balancers are all software. Next time you configure a load balancer, think about that.&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
