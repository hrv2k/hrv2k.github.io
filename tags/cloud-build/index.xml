<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloud Build on Hervé Kakiang&#39;s blog</title>
    <link>https://hrv2k.github.io/tags/cloud-build/</link>
    <description>Recent content in Cloud Build on Hervé Kakiang&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 20019–2021, Hervé Kakiang; all rights reserved.</copyright>
    <lastBuildDate>Fri, 31 Jan 2020 14:28:34 +0000</lastBuildDate><atom:link href="https://hrv2k.github.io/tags/cloud-build/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deploy to Firebase Hosting Using Cloud Build, Use Cloud KMS to Encrypt tokens</title>
      <link>https://hrv2k.github.io/post/deploy-to-firebase-hosting-using-cloud-build/</link>
      <pubDate>Fri, 31 Jan 2020 14:28:34 +0000</pubDate>
      
      <guid>https://hrv2k.github.io/post/deploy-to-firebase-hosting-using-cloud-build/</guid>
      <description>
        
          &lt;p&gt;&lt;a href=&#34;https://firebase.google.com/docs/hosting&#34;&gt;Firebase Hosting&lt;/a&gt; is Google
hosting service for Web and mobile Web apps. Using the
&lt;a href=&#34;https://firebase.google.com/docs/cli&#34;&gt;Firebase CLI&lt;/a&gt;, you can deploy files
from local directories on your computer to your Hosting server.
Deploying to Firebase Hosting using Google Cloud Build will allow you to
automate all the build, test and deployment phases.
And when it comes to continuous integration/deployment systems, it is
often the case that you have to provide sensitive information such as
authorization tokens, deploy api keys or other resources to the CI/CD
tool or service. However it&#39;s never a good practice to store them in
plaintext in config or source code files. They should be encrypted and
stored where they will not be compromised. That&#39;s when
&lt;a href=&#34;https://cloud.google.com/kms&#34;&gt;Cloud Key Management Service (KMS)&lt;/a&gt; comes in.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/kms&#34;&gt;Cloud KMS&lt;/a&gt; is a cloud-hosted key management
service that lets you manage cryptographic keys for your cloud services.
You can generate, use, rotate, and destroy cryptographic keys.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Essentially, Cloud KMS is a cloud service that provides cryptographic
functions that encrypt and decrypt sensitive information.
Cloud KMS allows you to protect secrets and other sensitive data that
you store on the GCP. Because Cloud KMS is integrated with
&lt;a href=&#34;https://cloud.google.com/kms/docs/iam&#34;&gt;Cloud Identity and Access Management (IAM)&lt;/a&gt;
and &lt;a href=&#34;https://cloud.google.com/logging/docs/audit/&#34;&gt;Cloud Audit Logging&lt;/a&gt;,
you can manage permissions on individual cryptographic keys and monitor
activities involving your keys. Only users who have the necessary IAM
permissions to use the CryptoKey can encrypt or decrypt resources with
that key. Cloud IAM gives you the ability to assigned fined-grained
permissions to specific users or service accounts to perform specific
tasks on specific resources.
Cloud Audit Logging tells you who did what, where, and when within your
GCP project.&lt;/p&gt;
&lt;p&gt;Cryptographic keys managed by Cloud KMS can be directly used by other GCP
services and by the applications you deploy on the GCP.&lt;/p&gt;
&lt;p&gt;In this post we shall take a look at using Cloud KMS to encrypt Firebase
deployment token, passing the encrypted token and the CryptoKey to a build
request to allow Cloud build to deploy an app to Firebase Hosting.&lt;/p&gt;
&lt;h1 id=&#34;what-you-should-know-before-getting-hands-on&#34;&gt;What you should know before getting hands-on&lt;/h1&gt;
&lt;h2 id=&#34;1-cloud-kms&#34;&gt;1. Cloud KMS&lt;/h2&gt;
&lt;p&gt;Cloud KMS organizes cryptographic keys in a hierarchical structure, and uses
Cloud IAM to manage access to resources at each level of the hierarchy.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://cloud.google.com/kms/docs/object-hierarchy#project&#34;&gt;Project&lt;/a&gt; &amp;gt;
&lt;a href=&#34;https://cloud.google.com/kms/docs/object-hierarchy#location&#34;&gt;Location&lt;/a&gt; &amp;gt;
&lt;a href=&#34;https://cloud.google.com/kms/docs/object-hierarchy#key_ring&#34;&gt;Key ring&lt;/a&gt; &amp;gt;
&lt;a href=&#34;https://cloud.google.com/kms/docs/object-hierarchy#key&#34;&gt;Key&lt;/a&gt; &amp;gt;
&lt;a href=&#34;https://cloud.google.com/kms/docs/object-hierarchy#key_version&#34;&gt;Key version&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Like any other GCP resource, Cloud KMS resources belong to a GCP project.&lt;/p&gt;
&lt;p&gt;In a project, Cloud KMS resources are created in a regional,
or multi-regional location. The location determines where the resources
are stored and where requests regarding those resources are processed.
Specifically, there are four types of
&lt;a href=&#34;https://cloud.google.com/kms/docs/locations&#34;&gt;locations&lt;/a&gt; where you can
create Cloud KMS resources: regional, dual-regional, multi-regional and global.
Resources created in the &lt;code&gt;global&lt;/code&gt; location are available from zones spread
around the globe.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key ring&lt;/strong&gt; is a logical grouping of cryptographic keys, It&#39;s a group of
keys created for a particular purpose. How you group your keys is
completely up to you. Keys inherit permissions from the key ring that
contains them. This allows you to manage permissions on keys at the key
ring level. For instance you can have one key ring for each one of your
environments, production key ring and development key ring.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/cloud-hosting-cbuild/keyring.png&#34; alt=&#34;Key ring (https://cloud.google.com/kms/docs/object-hierarchy#key)&#34;&gt;&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;key&lt;/strong&gt; in the GCP, is a named object that represents a cryptographic
key used for a specific purpose.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;key version&lt;/strong&gt; represents the key material, the actual bits used for
encryption. A key must have at least one key version. It can have many
key versions at the same time.&lt;/p&gt;
&lt;p&gt;Key rings and keys, once created in a project cannot be deleted. Key
versions, however, can be destroyed.&lt;/p&gt;
&lt;h2 id=&#34;2-cloud-build&#34;&gt;2. Cloud Build&lt;/h2&gt;
&lt;p&gt;Cloud Build is a CI/CD service on the GCP. It&#39;s used to build, test and
deploy artifacts to various environments. It does so by using docker
containers to execute different sort of tasks specified in the build
configuration file. Check out
&lt;a href=&#34;https://cloud.google.com/cloud-build/docs&#34;&gt;this page&lt;/a&gt; and
&lt;a href=&#34;https://cloud.google.com/cloud-build/docs/configuring-builds/build-test-deploy-artifacts&#34;&gt;this one&lt;/a&gt;
if you are not familiar with Cloud Build and want to learn more about it.
My &lt;a href=&#34;https://hrv2k.github.io/posts/getting-started-with-cloud-build/&#34;&gt;Getting Started with Cloud Build post&lt;/a&gt;
can also get you up to speed.&lt;/p&gt;
&lt;p&gt;Going forward, I&#39;ll assume that you know how Cloud Build works.&lt;/p&gt;
&lt;h1 id=&#34;gcp-setup&#34;&gt;GCP Setup&lt;/h1&gt;
&lt;p&gt;Before you begin, complete the following steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://accounts.google.com/Login&#34;&gt;Sign in&lt;/a&gt; to your Google Account.
If you don&#39;t already have one,
&lt;a href=&#34;https://accounts.google.com/SignUp&#34;&gt;sign up for a new account&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the Cloud Console, on the
&lt;a href=&#34;https://console.cloud.google.com/projectselector2/home/dashboard&#34;&gt;project selector page&lt;/a&gt;,
select or create a Google Cloud project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure that billing is enabled for your Google Cloud project.
&lt;a href=&#34;https://cloud.google.com/billing/docs/how-to/modify-project&#34;&gt;Learn how to confirm billing is enabled for your project&lt;/a&gt;
You are required to enable billing to use the GCP services that are used
here, however none of them will cost you money if you haven&#39;t used up the
&lt;a href=&#34;https://cloud.google.com/free&#34;&gt;free tier&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The gcloud SDK&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You can use Google Cloud Shell to follow along. Cloud Shell is
loaded with development tools, including the gcloud SDK which provides
command-line access to GCP resources. Navigate to
&lt;a href=&#34;https://console.cloud.google.com/&#34;&gt;GCP Console&lt;/a&gt;, on the top right
toolbar, click the Cloud Shell button to activate it.
You don&#39;t need to install anything if you are using Google Cloud Shell,
the next step from here is to
&lt;a href=&#34;#initialize-your-firebase-project&#34;&gt;initialize your Firebase project&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Or you can use the &lt;a href=&#34;https://cloud.google.com/sdk/docs/&#34;&gt;gcloud SDK&lt;/a&gt;
on your personal computer. Follow
&lt;a href=&#34;https://cloud.google.com/sdk/docs/downloads-interactive&#34;&gt;this  link&lt;/a&gt;,
select the correct SDK for your OS and install it. Once it is installed,
open the command line to initialize your cloud environment by typing the
command below, and follow the instructions to log in to GCP.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud init&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Test that gcloud CLI tool is properly logged in to GCP by checking the
active account. Run the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud auth list&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;install-firebase-cli&#34;&gt;Install Firebase CLI&lt;/h1&gt;
&lt;p&gt;Follow the instructions set
&lt;a href=&#34;https://firebase.google.com/docs/cli#install_the_firebase_cli&#34;&gt;here&lt;/a&gt;
to install Firebase CLI.
After installing the CLI, you must authenticate by signing into Firebase
using your Google account. Run the following command to sign in:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;firebase login&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you are properly signed into Firebase, your local machine is
connected to Firebase and you can access your Firebase projects by running
the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;firebase projects:list&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;initialize-your-firebase-project&#34;&gt;Initialize your Firebase project&lt;/h1&gt;
&lt;p&gt;Create a directory named &lt;code&gt;firebase-hosting-cb&lt;/code&gt; for your Firebase project,
then change directory into it:&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;mkdir firebase-hosting-cb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; firebase-hosting-cb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Follow the instructions set
&lt;a href=&#34;https://firebase.google.com/docs/cli#initialize_a_firebase_project&#34;&gt;here&lt;/a&gt;
to initialize a Firebase project. Select &lt;code&gt;Hosting&lt;/code&gt; as the Firebase feature
you want to set up for your Firebase project. Choose to use an existing
project, then select the project you want to associate with your project.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/cloud-hosting-cbuild/out.gif&#34; alt=&#34;firebase init&#34;&gt;&lt;/p&gt;
&lt;p&gt;Once the Firebase initialization completes, an &lt;code&gt;index.html&lt;/code&gt; file is
created inside of a directory named &lt;code&gt;public&lt;/code&gt; if you didn&#39;t change the
default settings during the initialization. Update the &lt;code&gt;index.html&lt;/code&gt; file
to your satisfaction.&lt;/p&gt;
&lt;p&gt;Let&#39;s initialize git as well:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git init&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run the command below to test your project locally&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;firebase serve&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&#34;deploy-to-firebase-hosting-manually&#34;&gt;Deploy to Firebase Hosting (manually)&lt;/h1&gt;
&lt;p&gt;To deploy a release of your project to Firebase Hosting, run the
following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;firebase deploy -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;First deployment&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You&#39;ll see an output similar to this.  Notice that &lt;code&gt;your-project-id&lt;/code&gt; will
be replaced by your actual project ID.&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; Deploying to &lt;span class=&#34;s1&#34;&gt;&amp;#39;your-project-id&amp;#39;&lt;/span&gt;...
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;i  deploying hosting
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;i  hosting&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;your-project-id&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: beginning deploy...
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;i  hosting&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;your-project-id&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: found &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; files in public
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;✔  hosting&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;your-project-id&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: file upload &lt;span class=&#34;nb&#34;&gt;complete&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;i  hosting&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;your-project-id&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: finalizing version...
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;✔  hosting&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;your-project-id&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: version finalized
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;i  hosting&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;your-project-id&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: releasing new version...
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;✔  hosting&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;your-project-id&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;: release &lt;span class=&#34;nb&#34;&gt;complete&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;✔  Deploy complete!
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;Project Console: https://console.firebase.google.com/project/your-project-id/overview
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;Hosting URL: https://your-project-id.firebaseapp.com&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
At this point you can access your site at the Hosting URL.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NB&lt;/strong&gt;: If you already have one Firebase Hosting site in your Firebase
project, you have to specify your site in &lt;code&gt;firebase.json&lt;/code&gt;. Add your site
name to the &lt;code&gt;firebase.json&lt;/code&gt; configuration file.
Or else the new deployment will override the existing site.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;hosting&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;site&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;your-site-name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;public&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;public&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;    &lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, run this command from your app&#39;s root directory to deploy your site:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;firebase deploy --only hosting:your-site-name&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Going forward, I&#39;ll assume that you have one site in your
Firebase project.&lt;/p&gt;
&lt;p&gt;You just manually deployed your app to Firebase Hosting. You&#39;ll have to
check your code to a source repository also separately. Let&#39;s
automate the process with Cloud Build.&lt;/p&gt;
&lt;h1 id=&#34;deploy-to-firebase-hosting-cloud-build&#34;&gt;Deploy to Firebase Hosting (cloud build)&lt;/h1&gt;
&lt;h2 id=&#34;firebase-token&#34;&gt;Firebase token&lt;/h2&gt;
&lt;p&gt;When you deployed to Firebase Hosting with &lt;code&gt;firebase deploy&lt;/code&gt;, it worked
because your local machine is connected to Firebase. But if you want to
deploy using another platform other than your local machine where you are
signed into Firebase, such as Cloud Build, Travis CI or CircleCI, you
have provide that platform a token and use the &lt;code&gt;--token&lt;/code&gt; flag of the Firebase CLI.
To get the token, run the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;firebase login:ci&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You&#39;ll be instructed to log in using the browser. After a succesful login,
the token will be printed to the console.&lt;/p&gt;
&lt;h2 id=&#34;encrypt-firebase-token-using-cloud-kms&#34;&gt;Encrypt Firebase token using Cloud KMS&lt;/h2&gt;
&lt;p&gt;You have the token, it&#39;s sensitive information. Anyone who has access to
that token can delete your app and redeploy whatever they want. So you
have to keep it secret, and at the same time you need to pass it to Cloud
Build. That&#39;s where Cloud KMS comes into play.&lt;/p&gt;
&lt;p&gt;Before you can encrypt your token using Cloud KMS, you have to create a
Cloud KMS KeyRing and CryptoKey.&lt;/p&gt;
&lt;p&gt;Initialize some environment variables
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;KEYRING_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;cicd-keyring&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;KEY_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;firebase-token&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Initialize an environment variable &lt;code&gt;FIREBASE_TOKEN&lt;/code&gt; with your token value.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;FIREBASE_TOKEN&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;YOUR_GENERATED_TOKEN&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Run the following command to create a KeyRing:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud kms keyrings create &lt;span class=&#34;nv&#34;&gt;$KEYRING_NAME&lt;/span&gt; --location global&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run the following command to create a CryptoKey:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud kms keys create &lt;span class=&#34;nv&#34;&gt;$KEY_NAME&lt;/span&gt; --location&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;global &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --keyring&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$KEYRING_NAME&lt;/span&gt; --purpose&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;encryption&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The CryptoKey is created.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/cloud-hosting-cbuild/key-created.png&#34; alt=&#34;crypto-created&#34;&gt;&lt;/p&gt;
&lt;p&gt;You can now use the CryptoKey to encrypt your
Firebase token. Remember that your Firebase token is in &lt;code&gt;$FIREBASE_TOKEN&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud kms encrypt --plaintext-file&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$FIREBASE_TOKEN&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;   --ciphertext-file&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;- &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# - writes to stdout&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;   --location&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;global --keyring&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$KEYRING_NAME&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --key&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$KEY_NAME&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; base64&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With this command, you encrypt the value of the environment variable
&lt;code&gt;$FIREBASE_TOKEN&lt;/code&gt; using the CryptoKey, and base64-encoded the encrypted
value. The output is the base64-encoded string of the encrypted token.&lt;/p&gt;
&lt;h2 id=&#34;cloud-build-config&#34;&gt;Cloud Build config&lt;/h2&gt;
&lt;p&gt;Now, let&#39;s write the build steps for Cloud Build. Probably what makes
Cloud Build so cool is its flexibility. You can do anything with it as
long as you package what you want to do in a docker image. In our case,
we need to have a Firebase build step whereby we use the firebase-tools
to deploy our app. We could create the docker image to containerize
firebase-tools, push the containerized image to Container Registry and
use it to deploy our app. Details regarding that process can be found
&lt;a href=&#34;https://cloud.google.com/cloud-build/docs/configuring-builds/build-test-deploy-artifacts&#34;&gt;here&lt;/a&gt;.
However we will use &lt;a href=&#34;https://github.com/GoogleCloudPlatform/cloud-builders-community/tree/master/firebase&#34;&gt;this docker image&lt;/a&gt;.
Clone the &lt;a href=&#34;https://github.com/GoogleCloudPlatform/cloud-builders-community.git&#34;&gt;cloud-builders-community repo&lt;/a&gt;
move the &lt;code&gt;firebase&lt;/code&gt; folder to your app&#39;s root directory. you can delete the
repo from your computer. Or at least make it is not in your app directory.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; firebase-hosting-cb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git clone https://github.com/GoogleCloudPlatform/cloud-builders-community.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; cloud-builders-community&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;mv firebase ../ &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ../&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;rm -rf cloud-builders-community/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create the &lt;code&gt;cloudbuild.yaml&lt;/code&gt; file and paste in the following contents.
Make sure to replace &lt;code&gt;your-project-id&lt;/code&gt; with your actual project ID and
&lt;code&gt;YOUR_ENCRYPTED_TOKEN&lt;/code&gt; with the actual value.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;gcr.io/cloud-builders/docker&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-t&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;gcr.io/$PROJECT_ID/firebase&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;firebase&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;gcr.io/$PROJECT_ID/firebase&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;deploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;--project&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;$PROJECT_ID&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;secretEnv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;FIREBASE_TOKEN&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;secrets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;kmsKeyName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;projects/your-project-id/locations/global/keyRings/cicd-keyring/cryptoKeys/firebase-token&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;secretEnv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;FIREBASE_TOKEN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;YOUR_ENCRYPTED_TOKEN&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;images&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;gcr.io/$PROJECT_ID/firebase&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You have to grant the Cloud Build service account the CryptoKeyDecrypter
role&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud kms keys add-iam-policy-binding &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   &lt;span class=&#34;nv&#34;&gt;$KEY_NAME&lt;/span&gt; --location&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;global --keyring&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$KEYRING_NAME&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --member&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;serviceAccount:PROJECT_NUMBER@cloudbuild.gserviceaccount.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   --role&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;roles/cloudkms.cryptoKeyDecrypter&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Replace &lt;code&gt;PROJECT_NUMBER&lt;/code&gt; by your actual projectNumber. You can use this
command &lt;code&gt;gcloud  projects describe your-project-id&lt;/code&gt; to find your project number.&lt;/p&gt;
&lt;h2 id=&#34;enable-apis&#34;&gt;Enable APIs&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud services &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; cloudbuild.googleapis.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   containerregistry.googleapis.com cloudkms.googleapis.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   firebase.googleapis.com cloudresourcemanager.googleapis.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   firebasehosting.googleapis.com&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;deploy&#34;&gt;Deploy&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud builds submit --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;cloudbuild.yaml .&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;rm -rf cloud-builders-community/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are interested in checking your code to GitHub and deploy to Firebase
Hosting from there, check my &lt;a href=&#34;https://hrv2k.github.io/posts/integrate-github-with-cloud-build-deploy-to-cloud-run/&#34;&gt;post on integrating GitHub with Cloud Build&lt;/a&gt;.
It details how to step by step how to integrate GitHub and Cloud Build, and
how to trigger a deployment upon a push to your GitHub repo. Although in
that post, we deploy to Cloud Run, the process is exactly the same as far
as Cloud Build and GitHub are concerned. What is different is the steps
in the &lt;code&gt;cloudbuild.yaml&lt;/code&gt; file. We&#39;ve already configured &lt;code&gt;cloudbuild.yaml&lt;/code&gt;
to deploy to Firebase Hosting.&lt;/p&gt;
&lt;p&gt;The source code for this post, including the &lt;code&gt;cloudbuild.yaml&lt;/code&gt; file is available
&lt;a href=&#34;https://github.com/kakiang/firebase-hosting-cb&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks for reading 🙌. À la prochaine.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Integrate GitHub with Cloud Build, Deploy to Cloud Run</title>
      <link>https://hrv2k.github.io/post/integrate-github-cloud-build-deploy-cloud-run/</link>
      <pubDate>Thu, 12 Dec 2019 18:00:32 +0000</pubDate>
      
      <guid>https://hrv2k.github.io/post/integrate-github-cloud-build-deploy-cloud-run/</guid>
      <description>
        
          &lt;p&gt;&lt;strong&gt;Integrate GitHub with Cloud Build to build a container image from
a GitHub repo, push the image to Container Registry and deploy it to Cloud Run.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In the &lt;a href=&#34;https://hrv2k.github.io/posts/getting-started-with-cloud-build/&#34;&gt;Getting started with Cloud Build&lt;/a&gt;
post, we automated the build of a container image and its deployment to
&lt;a href=&#34;https://cloud.google.com/cloud-build/&#34;&gt;Cloud Run&lt;/a&gt; using
&lt;a href=&#34;https://cloud.google.com/cloud-build/&#34;&gt;Cloud Build&lt;/a&gt;. But something was
missing. We didn&#39;t use code management system, i.e. version control.
Who doesn&#39;t version control their codebase? Luckily for us Cloud Build
integrate nicely with GitHub. Cloud Build helps us create fast, consistent,
reliable builds. Integrating it with GitHub will enable us to easily set
up CI through Cloud Build and automate builds and tests as part of our
development workflow. So check your code to GitHub like I did
&lt;a href=&#34;https://github.com/kakiang/docker-react-app-starter&#34;&gt;here&lt;/a&gt; and let&#39;s
create a push trigger to run a build every time we push code to a
branch. That means instead of running &lt;code&gt;gcloud builds submit&lt;/code&gt; to build and
deploy to Cloud Run, we will just push code to GitHub and builds will be
triggered. To achieve this, we have to connect our repository on GitHub
to Cloud Build and configure a build trigger.&lt;/p&gt;
&lt;p&gt;I assume that you have a GCP account. If you don&#39;t, go to
&lt;a href=&#34;https://console.cloud.google.com/&#34;&gt;Cloud Console&lt;/a&gt; to set it up.
You will get $300 worth of credit for free to experiment with.
I also assume that you have read my previous post
&lt;a href=&#34;https://hrv2k.github.io/posts/intro-to-cloud-build/&#34;&gt;Introduction to Cloud Build&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Navigate to &lt;a href=&#34;https://console.cloud.google.com/&#34;&gt;Cloud Console&lt;/a&gt;, and go to
&lt;strong&gt;Navigation menu &amp;gt; Cloud Build&lt;/strong&gt;. If Cloud Build API isn&#39;t enabled, you
will be prompted to enable it. Click on &lt;strong&gt;Triggers&lt;/strong&gt;, you will see the
interface below where you&#39;re asked to select where your code is located.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/build-trigger/select_source.png&#34; alt=&#34;docker-react-app-service on Cloud Run&#34;&gt;&lt;/p&gt;
&lt;p&gt;Our code is on GitHub, so let&#39;s select the first option, GitHub. Notice
the message that says &amp;quot;&lt;em&gt;You&#39;ll be asked to authorize the Google Build
GitHub App to access your GitHub Account to proceed&lt;/em&gt;&amp;quot;. That&#39;s what happens
once you click &lt;strong&gt;Continue&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/build-trigger/authenticate.png&#34; alt=&#34;docker-react-app-service on Cloud Run&#34;&gt;&lt;/p&gt;
&lt;p&gt;Authorize Google Build to access your GitHub account. Then you&#39;ll be asked
to connect Cloud Build to your repositories as depicted below&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/build-trigger/install_cb_repo1.png&#34; alt=&#34;docker-react-app-service on Cloud Run&#34;&gt;&lt;/p&gt;
&lt;p&gt;Click on &lt;strong&gt;Install Google Cloud Build&lt;/strong&gt; button and you&#39;ll be prompted to
choose the repositories that you&#39;d like to be connected to Cloud Build.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/build-trigger/install_cb_repoo1.png&#34; alt=&#34;install_cb_repo&#34;&gt;&lt;/p&gt;
&lt;p&gt;The first option will connect all your current and future repositories
with Cloud Build. Let&#39;s go with the second option where we can select only
the repository that we need it connected to Cloud Build. Once it&#39;s done
click on &lt;strong&gt;Install&lt;/strong&gt;. Then you&#39;ll be brought back to select the repository
to connect to Cloud Build as shown below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/build-trigger/select_repo.png&#34; alt=&#34;select_repo&#34;&gt;&lt;/p&gt;
&lt;p&gt;As you can see I selected only one repository, &lt;code&gt;docker-react-app-starter&lt;/code&gt;,
to connect to Cloud Build. That&#39;s why we see only one repository listed
here. If you&#39;d selected to connect all repositories to Cloud Build in the
previous step, you&#39;d see all your repos listed. Check
&amp;quot;&lt;em&gt;I Understand that GitHub content...&lt;/em&gt;&amp;quot; and click &lt;strong&gt;Connect repository&lt;/strong&gt;.
It&#39;s now time to create a push trigger.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/build-trigger/create_push_trigger.png&#34; alt=&#34;create_push_trigger&#34;&gt;&lt;/p&gt;
&lt;p&gt;Click &lt;strong&gt;Create push trigger&lt;/strong&gt;. And voila, your build trigger.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/build-trigger/default_push_trigger.png&#34; alt=&#34;default_push_trigger&#34;&gt;&lt;/p&gt;
&lt;p&gt;This build trigger will start a build any time we push to any git branch,
it will autodetect the build configuration (&lt;code&gt;Dockerfile&lt;/code&gt; or &lt;code&gt;cloudbuild.yaml&lt;/code&gt;).
As you can see, it&#39;s possible choose to trigger the build upon a push
to a specific branch, a pull request, or when you tag a new release.&lt;/p&gt;
&lt;p&gt;Disable this build trigger. We are going to create another one. Click &lt;strong&gt;CREATE TRIGGER&lt;/strong&gt;
and you&#39;ll get a form like below. Fill it out with relevant information.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/build-trigger/create_trigger.png&#34; alt=&#34;create_trigger&#34;&gt;&lt;/p&gt;
&lt;p&gt;Notice below how we explicitly specified the build config file.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/build-trigger/create_trigger2.png&#34; alt=&#34;create_trigger&#34;&gt;&lt;/p&gt;
&lt;p&gt;Finally click &lt;strong&gt;Create trigger&lt;/strong&gt;. If everything goes well, you&#39;ll see the
list of the repositories connected to Cloud Build and the triggers
configured for each repo.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/build-trigger/list_triggers.png&#34; alt=&#34;list_triggers&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now let&#39;s test our pipeline. Yeah it&#39;s a pipeline, a proportionate CI/CD
pipeline.&lt;/p&gt;
&lt;p&gt;Change something in the code, commit and push it to GitHub.&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git commit -am &lt;span class=&#34;s2&#34;&gt;&amp;#34;Test Cloud Build Trigger&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git push&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/build-trigger/commit_github.png&#34; alt=&#34;commit_github&#34;&gt;&lt;/p&gt;
&lt;p&gt;Take note of the hash of the lastest commit (&lt;code&gt;d7e27b1&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Now go back to Cloud Console &lt;strong&gt;Navigation &amp;gt; Cloud Build&lt;/strong&gt;, you&#39;ll notice
that a build has been triggered. Pay attention to the &lt;strong&gt;Git commit&lt;/strong&gt;
column, compare the value with the commit hash from GitHub. It&#39;s the same :smile:.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/build-trigger/build_triggered.png&#34; alt=&#34;build_triggered&#34;&gt;&lt;/p&gt;
&lt;p&gt;When the build complete, go to &lt;strong&gt;Navigation &amp;gt; Cloud Run&lt;/strong&gt; in the Cloud
Console to see a new version of &lt;code&gt;docker-react-app-starter-service&lt;/code&gt; deployed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/build-trigger/new_service_version.png&#34; alt=&#34;new_service_version&#34;&gt;&lt;/p&gt;
&lt;p&gt;That was fun.&lt;/p&gt;
&lt;p&gt;I probably know what you are probably saying to yourself;
&lt;em&gt;it doesn&#39;t look like a &#39;real&#39; CI/CD pipeline&lt;/em&gt;. Well... basically 2
things are missing: There were no tests, and there was only one deployment
environment. About deployment environment, we can configure a push trigger
that runs a build when we push code to the dev branch and deploy to dev/staging
environment. And another push trigger for the master branch with a deployment
to the production environment. For the tests, they can easily be executed
with Cloud Build.&lt;/p&gt;
&lt;p&gt;Thanks for reading :raised_hands:. À la prochaine&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Getting started with Cloud Build</title>
      <link>https://hrv2k.github.io/post/getting-started-with-cloud-build/</link>
      <pubDate>Fri, 06 Dec 2019 06:41:35 +0000</pubDate>
      
      <guid>https://hrv2k.github.io/post/getting-started-with-cloud-build/</guid>
      <description>
        
          &lt;h1 id=&#34;1-what-is-cloud-build&#34;&gt;1. What is Cloud Build?&lt;/h1&gt;
&lt;p&gt;Cloud Build is a Google&#39;s service that offers
&lt;a href=&#34;https://cloud.google.com/docs/ci-cd/&#34;&gt;CI/CD&lt;/a&gt; fonctionalities
that cover all the software development stages in cloud as well as in
on-premise environments. Essentially, you can use Cloud Build to build,
test and deploy your application by providing it with a
&lt;a href=&#34;https://cloud.google.com/cloud-build/docs/build-config&#34;&gt;build config file&lt;/a&gt;
that contains the tasks you want Cloud Build to execute. The build config file has
&lt;a href=&#34;https://cloud.google.com/cloud-build/docs/build-config#structure_of_a_build_config_file&#34;&gt;many sections&lt;/a&gt;,
and each section can have many fields. One of the sections, maybe the most
important, is the &lt;strong&gt;Build steps&lt;/strong&gt;.&lt;/p&gt;
&lt;h1 id=&#34;2-build-config-file&#34;&gt;2. Build config file&lt;/h1&gt;
&lt;h2 id=&#34;21-build-steps&#34;&gt;2.1. Build steps&lt;/h2&gt;
&lt;p&gt;Build steps is one of the sections of the build config file. A build step
has a &lt;code&gt;name&lt;/code&gt; field and an &lt;code&gt;args&lt;/code&gt; field. The &lt;code&gt;name&lt;/code&gt; field specifies a
&lt;a href=&#34;https://github.com/GoogleCloudPlatform/cloud-builders&#34;&gt;builder&lt;/a&gt;,
which is a CLI tool such as docker, kubectl, npm, gcloud, git etc.,
running in a container image. But we can&#39;t just use these tools without
passing them a command, and sometimes an argument. That&#39;s where the
&lt;code&gt;args&lt;/code&gt; field comes in. It takes a list of arguments and passes them to
the tool that&#39;s running in the builder referenced by the &lt;code&gt;name&lt;/code&gt; field.
And according to the
&lt;a href=&#34;https://cloud.google.com/cloud-build/docs/build-config&#34;&gt;build config docs&lt;/a&gt;,
&amp;quot;If the builder used in the build step has an entrypoint, args will be
used as arguments to that entrypoint. If the builder does not define an
entrypoint, the first element in args will be used as the entrypoint,
and the remainder will be used as arguments.&amp;quot; A build step has many other
fields like &lt;code&gt;env&lt;/code&gt; that takes a list of environment variables, and
&lt;code&gt;timeout&lt;/code&gt; that sets a time limit for executing the step, etc.&lt;/p&gt;
&lt;p&gt;If we were to build a container image using docker, we&#39;d use the
&lt;code&gt;docker build&lt;/code&gt; command. And we&#39;d push it to Container Registry using the
&lt;code&gt;docker push&lt;/code&gt; command.
However, using Cloud Build, we put all these commands in a config file
called &lt;code&gt;cloudbuild.yaml&lt;/code&gt; and run them at once. Of course the commands are
executed sequentially, but we only have to deal with one command, the
command that launches the build process. The config file for building,
tagging and pushing a docker image looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;c&#34;&gt;# build config file&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/docker&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;build&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;-t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/project-id/hw-image:tag&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/docker&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;push&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/project-id/hw-image:tag&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;To submit the build, we run the following command in the directory that
contains the &lt;code&gt;Dockerfile&lt;/code&gt; and the &lt;code&gt;cloudbuild.yaml&lt;/code&gt; file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud builds submit&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the build config file isn&#39;t specified like above, it defaults to
&lt;code&gt;cloudbuild.yaml&lt;/code&gt;. But if the name of our build config file was not
the default one or wasn&#39;t in the current directory, we&#39;d have to specify
it in the command line like this.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud builds submit --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;path/to/build_config_file.yaml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The build config file can be a YAML or JSON file.&lt;/p&gt;
&lt;h2 id=&#34;22-options&#34;&gt;2.2. Options&lt;/h2&gt;
&lt;p&gt;Another section that is part of the build config file structure is the
&lt;code&gt;options&lt;/code&gt; field. It specifies the arguments that are used for the build,
although they are optional.&lt;/p&gt;
&lt;p&gt;One of the most interesting options is the &lt;code&gt;machineType&lt;/code&gt;. Since the
builds run on the GCP, you can request for a high-CPU VM
(n1-highcpu-8, n1-highcpu-32) to
&lt;a href=&#34;https://cloud.google.com/cloud-build/docs/speeding-up-builds#using_custom_virtual_machine_sizes&#34;&gt;speed up your build&lt;/a&gt;.
How do you do that? Add the &lt;code&gt;machineType&lt;/code&gt; option to the build config file
like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;c&#34;&gt;# build config file&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/docker&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;build&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;-t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/project-id/hw-image:tag&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/docker&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;push&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/project-id/hw-image:tag&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;machineType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;N1_HIGHCPU_8&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Or, instead of specifying it in the build config file, we can use the
&lt;code&gt;--machine-type&lt;/code&gt; flag in the command line:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud builds submit --config&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;path/to/build_config_file.yaml &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --machine-type&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;n1-highcpu-8 .&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can request for a custom disk size up to 1000 GB by using the
&lt;code&gt;diskSizeGb&lt;/code&gt; option.&lt;/p&gt;
&lt;p&gt;There are &lt;a href=&#34;https://cloud.google.com/cloud-build/docs/build-config&#34;&gt;plenty of options&lt;/a&gt;
that you can use for your builds&lt;/p&gt;
&lt;h2 id=&#34;23-substitutions&#34;&gt;2.3. Substitutions&lt;/h2&gt;
&lt;p&gt;When writing your build config file, you don&#39;t have to write out explicitly
your project ID. You can simply specify it by using
the a &lt;a href=&#34;https://cloud.google.com/cloud-build/docs/configuring-builds/substitute-variable-values&#34;&gt;substitution variable&lt;/a&gt;
&lt;code&gt;$PROJECT_ID&lt;/code&gt;. And the value of this variable will be resolved by Cloud
Build at runtime to the actual project ID that is set in the local
configuration. Cloud Build provides built-in substitutions such as
&lt;code&gt;$PROJECT_ID&lt;/code&gt;, &lt;code&gt;$BUILD_ID&lt;/code&gt;, etc. We can also define our own.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/docker&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;build&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;-t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/$PROJECT_ID/hw-image:tag&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# push image to Container Registry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;images&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/$PROJECT_ID/hw-image:tag&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;24-cloud-build-artifacts&#34;&gt;2.4. Cloud Build Artifacts&lt;/h2&gt;
&lt;p&gt;When we build a container image with Cloud Build, we can push it
to Container Registry in two different ways: first, by executing
a step that runs &lt;code&gt;docker push&lt;/code&gt; command or second, by adding an &lt;code&gt;images&lt;/code&gt;
field in the build config file and listing the images to store, like above.
So we can store a docker image in Container Registry as part of the build
flow or after the build is completed.&lt;/p&gt;
&lt;p&gt;But what about anything else that is not a container image, non-container
artifacts?  We use the &lt;code&gt;artifacts&lt;/code&gt; field in a build config file to store
them to Cloud Storage location. You specify the Cloud Storage location
where the artifacts must be stored and the paths to the artifacts to be
stored:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;artifacts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;STORAGE_LOCATION]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;paths&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ARTIFACT_PATH],[ARTIFACT_PATH], ...]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/javac&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HelloWorld.java&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;artifacts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gs://[STORAGE_LOCATION]&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;paths&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HelloWorld.java&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HelloWorld.class&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Learn more about &lt;a href=&#34;https://cloud.google.com/cloud-build/docs&#34;&gt;Cloud Build&lt;/a&gt;
and &lt;a href=&#34;https://cloud.google.com/cloud-build/docs/build-config&#34;&gt;the structure of build config&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-dockerize-your-react-app-and-deploy-it-to-cloud-run-using-cloud-build&#34;&gt;3. Dockerize your React App and deploy it to Cloud Run using Cloud Build&lt;/h1&gt;
&lt;p&gt;In a bid to consolidate our knowledge of the fundamentals of Cloud Build,
we are going to package up a simple React App in a container image, build
and tag it using docker, push it to Container Registry and deploy it to
Cloud Run, all using Cloud Build. We will use nginx to serve the React app.&lt;/p&gt;
&lt;h2 id=&#34;31-create-react-app&#34;&gt;3.1. create-react-app&lt;/h2&gt;
&lt;p&gt;This is not a React tutorial. However we will generate React boilerplate
code using &lt;a href=&#34;https://github.com/facebook/create-react-app&#34;&gt;Facebook Create React App&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Assuming that you have &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node&lt;/a&gt; installed, run the
following command to install &lt;code&gt;create-react-app&lt;/code&gt; and create a React app.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;npm install -g create-react-app &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; create-react-app docker-react-app-starter &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; docker-react-app-starter&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run the following command to start the app.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;npm start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Feel free to edit the &lt;code&gt;src/App.js&lt;/code&gt; file for demo purpose. You may replace
&lt;code&gt;&amp;lt;p&amp;gt;Edit &amp;lt;code&amp;gt;src/App.js&amp;lt;/code&amp;gt; and save to reload.&amp;lt;/p&amp;gt;&lt;/code&gt; with the following snippet.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  React App running inside a container and deployed to Cloud Run using
  Cloud Build
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;32-dockerfile&#34;&gt;3.2. Dockerfile&lt;/h2&gt;
&lt;p&gt;Our React app is ready to be packaged up. Let&#39;s create the &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Dockerfile&#34; data-lang=&#34;Dockerfile&#34;&gt;&lt;span class=&#34;c&#34;&gt;#### Stage 1: Build the react application&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; node:10.15.2-alpine as build&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Configure the main working directory inside the docker image.&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# This is the base directory used in any further RUN, COPY, and CMD&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WORKDIR&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; /app&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Copy the package.json and package-lock.json inside the WORKDIR and install&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# the dependencies.&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; package.json package-lock.json ./&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; npm install&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Copy the main application&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; . ./&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Build the application&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; npm run build&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#### Stage 2: Serve the React application from Nginx&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; nginx:1.17.0-alpine&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Copy the react build from Stage 1&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; --from&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;build /app/build /var/www&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Copy our custom nginx config&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; nginx.conf /etc/nginx/nginx.conf&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Expose port 8080 to the Docker host, so we can access it from the outside.&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;EXPOSE&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; 8080&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Run nginx&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CMD&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;nginx&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-g&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;daemon off;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This is how the custom nginx config looks like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# auto detects a good number of processes to run&lt;/span&gt;
worker_processes auto&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#Provides the configuration file context in which the directives that affect connection processing are specified.&lt;/span&gt;
events &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Sets the maximum number of simultaneous connections that can be opened by a worker process.&lt;/span&gt;
    worker_connections 8000&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Tells the worker to accept multiple connections at a time&lt;/span&gt;
    multi_accept on&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

http &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    include       /etc/nginx/mime.types&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    default_type  application/octet-stream&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# Sets the path, format, and configuration for a buffered log write&lt;/span&gt;
    log_format compression &lt;span class=&#34;s1&#34;&gt;&amp;#39;$remote_addr - $remote_user [$time_local] &amp;#39;&lt;/span&gt;
        &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#34;$request&amp;#34; $status $upstream_addr &amp;#39;&lt;/span&gt;
        &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#34;$http_referer&amp;#34; &amp;#34;$http_user_agent&amp;#34;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    server &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# listen on port 8080&lt;/span&gt;
&lt;span class=&#34;hl&#34;&gt;        listen 8080&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# save logs here&lt;/span&gt;
        access_log /var/log/nginx/access.log compression&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# nginx root directory&lt;/span&gt;
        root /var/www&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# what file to serve as index&lt;/span&gt;
        index index.html index.htm&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

        location / &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# First attempt to serve request as file, then&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# as directory, then fall back to redirecting to index.html&lt;/span&gt;
            try_files &lt;span class=&#34;nv&#34;&gt;$uri&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$uri&lt;/span&gt;/ /index.html&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# Media: images, icons, video, audio, HTC&lt;/span&gt;
        location ~* &lt;span class=&#34;se&#34;&gt;\.&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;?:jpg&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;jpeg&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;gif&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;png&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;ico&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;cur&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;gz&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;svg&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;svgz&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;mp4&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;ogg&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;ogv&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;webm&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;htc&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;$ &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
          expires 1M&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
          access_log off&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
          add_header Cache-Control &lt;span class=&#34;s2&#34;&gt;&amp;#34;public&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# Javascript and CSS files&lt;/span&gt;
        location ~* &lt;span class=&#34;se&#34;&gt;\.&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;?:css&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;js&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;$ &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            try_files &lt;span class=&#34;nv&#34;&gt;$uri&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;404&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            expires 1y&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            access_log off&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            add_header Cache-Control &lt;span class=&#34;s2&#34;&gt;&amp;#34;public&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# Any route containing a file extension (e.g. /devicesfile.js)&lt;/span&gt;
        location ~ ^.+&lt;span class=&#34;se&#34;&gt;\.&lt;/span&gt;.+$ &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            try_files &lt;span class=&#34;nv&#34;&gt;$uri&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;404&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Line 23: We make the server listens on port 8080 because Cloud Run requires
the container listens on port defined by the &lt;code&gt;$PORT&lt;/code&gt; environment variable,
which is set to 8080.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Create the &lt;code&gt;.dockerignore&lt;/code&gt; file and paste in it the content of &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;33-test-locally&#34;&gt;3.3. Test locally&lt;/h2&gt;
&lt;p&gt;We can build and run the container image locally to make sure it works.
You can continue to the next section, this section is totally optional.&lt;/p&gt;
&lt;p&gt;You need to have &lt;a href=&#34;https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce&#34;&gt;docker&lt;/a&gt;
installed to build and run images locally. Make sure you are in the docker-react-app-starter root directory, where the
&lt;code&gt;Dockerfile&lt;/code&gt; is located, and run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;docker build -t docker-react-app-starter:0.1 .&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don&#39;t forget the &lt;code&gt;.&lt;/code&gt; character at the end, it sets the build context to the current directory.&lt;/p&gt;
&lt;p&gt;After a successful completion, you will see the message
&lt;strong&gt;Successfully tagged docker-react-app-starter:0.1&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Then you can now run the image with this command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;docker run --publish 80:8080 docker-react-app-starter:0.1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Open your browser and navigate to &lt;a href=&#34;127.0.0.1:80&#34;&gt;127.0.0.1:80&lt;/a&gt; to access
your React app.&lt;/p&gt;
&lt;p&gt;Exit the command line to stop the container.&lt;/p&gt;
&lt;h2 id=&#34;34-cloudbuildyaml&#34;&gt;3.4. cloudbuild.yaml&lt;/h2&gt;
&lt;p&gt;Now let&#39;s create the &lt;code&gt;cloudbuild.yaml&lt;/code&gt; file at the &lt;code&gt;docker-react-app-starter&lt;/code&gt;
root directory&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Build the container image, we use the substitution var $PROJECT_ID&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/docker&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;build&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;-t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/$PROJECT_ID/docker-react-app-starter:0.1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Push the container image to Container Registry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/docker&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;push&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/$PROJECT_ID/docker-react-app-starter:0.1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Deploy container image to Cloud Run&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/cloud-builders/gcloud&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;beta&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;run&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;deploy&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;docker-react-app-starter-service&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;--image&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gcr.io/$PROJECT_ID/docker-react-app-starter:0.1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;--region&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;us-central1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;--memory&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;128Mi&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;--port&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;80&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;--platform&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;managed&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;--allow-unauthenticated&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# We use the options section to request for an 8 CPUs machineType VM.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# It&amp;#39;s an overkill for this tiny build though&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;machineType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;N1_HIGHCPU_8&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;images&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;gcr.io/$PROJECT_ID/docker-react-app-starter:0.1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Duplicate &lt;code&gt;.dockerignore&lt;/code&gt;, then rename the duplicate &lt;code&gt;.gcloudignore&lt;/code&gt;.
The &lt;code&gt;.dockerignore&lt;/code&gt; file is ignored by Cloud Build.&lt;/p&gt;
&lt;h2 id=&#34;35-gcp-logistics&#34;&gt;3.5. GCP logistics&lt;/h2&gt;
&lt;p&gt;From now on, we are going to use
&lt;a href=&#34;https://cloud.google.com/sdk/docs/&#34;&gt;Cloud SDK gcloud command-line tool&lt;/a&gt;
and work with a GCP project.&lt;/p&gt;
&lt;p&gt;Run this command to log in to GCP:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud auth login&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Set the project that you will be working with. Replace &lt;code&gt;PROJECT_ID&lt;/code&gt; by the actual project ID.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud config &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; project PROJECT_ID&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Export the project ID as the environment variable &lt;code&gt;$GCLOUD_PROJECT&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;GCLOUD_PROJECT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gcloud config get-value project&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let&#39;s also export the project number, because we are going to use it a
couple of times.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PROJECT_NUMBER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;gcloud projects describe &lt;span class=&#34;nv&#34;&gt;$GCLOUD_PROJECT&lt;/span&gt; --format&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;value(projectNumber)&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;36-enable-apis&#34;&gt;3.6. Enable APIs&lt;/h2&gt;
&lt;p&gt;To build container images on the GCP and deploy them to Cloud Run, we
have to enable Cloud Build API, Container Registry API and Cloud Run API:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud services &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; cloudbuild.googleapis.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  containerregistry.googleapis.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  run.googleapis.com&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;37-iam-permissions&#34;&gt;3.7. IAM permissions&lt;/h2&gt;
&lt;p&gt;Before we can start the build, we have to grant Cloud Build service account
the Cloud Run Admin role (&lt;code&gt;roles/run.admin&lt;/code&gt;) so that it has permissions to
deploy to Cloud Run.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud projects add-iam-policy-binding &lt;span class=&#34;nv&#34;&gt;$GCLOUD_PROJECT&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;      --member&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;serviceAccount:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PROJECT_NUMBER&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;@cloudbuild.gserviceaccount.com&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;      --role&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;roles/run.admin&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We also have to grant Cloud Build service account the service account user role.
I explain the reason why &lt;a href=&#34;https://kakiang.github.io/blog/posts/birthday-app-2/#iam-permissions&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud iam service-accounts add-iam-policy-binding &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;nv&#34;&gt;$PROJECT_NUMBER&lt;/span&gt;-compute@developer.gserviceaccount.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;      --member&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;serviceAccount:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PROJECT_NUMBER&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;@cloudbuild.gserviceaccount.com&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;      --role&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;roles/iam.serviceAccountUser&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;38-gcloud-builds-submit&#34;&gt;3.8. gcloud builds submit&lt;/h2&gt;
&lt;p&gt;We are all set. We can now submit the build to Cloud Build.
From the root directory of docker-react-app-starter where the &lt;code&gt;Dockerfile&lt;/code&gt; and
&lt;code&gt;cloudbuild.yaml&lt;/code&gt; are located, run this command to start the build:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud builds submit&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yeah it&#39;s only 3 words &amp;amp;#129327.&lt;/p&gt;
&lt;p&gt;After successful completion, you will see &lt;strong&gt;SUCCESS&lt;/strong&gt; at the end of the output.&lt;/p&gt;
&lt;p&gt;Look for the URL of the deployed service in the output, it looks
something like this &lt;code&gt;https://docker-react-app-starter-service-[hash]-uc.a.run.app&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hrv2k.github.io/images/docker-react-app.jpg&#34; alt=&#34;docker-react-app-service on Cloud Run&#34;&gt;&lt;/p&gt;
&lt;p&gt;Run this command to list your Cloud Run services.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;gcloud beta run services list --platform&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;managed&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that&#39;s it. For the subsequent builds and deployments of the app, you
won&#39;t have to go through all the steps before submitting your build. You just
work on your app and submit the build to Cloud Build with &lt;code&gt;gcloud builds submit&lt;/code&gt;,
and navigate to the URL of the deployed service. Enabling APIs, setting IAM
permissions are done only once.&lt;/p&gt;
&lt;p&gt;Find the source code of &lt;code&gt;docker-react-app-starter&lt;/code&gt; on &lt;a href=&#34;https://github.com/kakiang/docker-react-app-starter&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks for reading :raised_hands:. À la prochaine&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
